# This is a basic workflow to help you get started with Actions
name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-16.04, macos-10.15]

    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    # Runs a single command using the runners shell
    - name: Setup Nim environment
      uses: jiro4989/setup-nim-action@v1.0.2
      with:
          # The Nim version to download (if necessary) and use. Example: 1.0.2
          nim-version: 1.0.6 # optional, default is stable

    - name: Build executable
      run: nimble build -y til.nimble && chmod +x til && mkdir bin && mv til bin
    
    - name: Upload Artifact
      uses: actions/upload-artifact@v1.0.0
      with:
        # Artifact name
          name: til
          path: bin

    - name: Create Release
      id: create_release
      if: ${{ matrix.os }} == "ubuntu-16.04"
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: bin/til
        asset_name: til_${{ matrix.os }}
        asset_content_type: application/octet-stream
